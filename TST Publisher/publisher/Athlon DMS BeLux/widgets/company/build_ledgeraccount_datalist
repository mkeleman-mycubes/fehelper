<style>
    input::-webkit-calendar-picker-indicator {
        display: none;
    }
</style>

<datalist style="background: #fff;" id="FE_{{options.containerId}}_ledger_accounts"></datalist>
<datalist style="background: #fff;" id="FE_{{options.containerId}}_cost_centers"></datalist>

<script>
    jQuery(document).ready(function () {
        let FE_current = FE['{{options.containerId}}'];
        let ledgerAccounts = FE_current.getAnswer({ questionName: 'ledgeraccounts' });
        let ledgerAccountFields = jQuery('#{{options.containerId}} .FE-ledger-account input');
        let datalistField = jQuery('#FE_{{options.containerId}}_ledger_accounts');
        let costCenters = FE_current.getAnswer({ questionName: 'cost_centers' });
        let costCenterFields = jQuery('#{{options.containerId}} .FE-cost-center input');
        let costCenterDatalistField = jQuery('#FE_{{options.containerId}}_cost_centers');

        if (!ledgerAccounts || ledgerAccounts.length < 1) {
            let companyCode = FE_current.getAnswer({ questionName: 'companyCode' });
            FE_current.serviceCall({
                data: { name: "retrieveLedgerAccounts_piper", companyCode: companyCode },
                success: function (resp) {
                    // buildDataList(resp.ledgerData);
                    FE_current.setAnswer({questionName: 'ledgeraccounts', answer: resp.ledgerData})
                },
                err: function () {
                    console.log("Ledger accounts can't be recieved.");
                }
            });
        }
        /* } else {
          buildDataList(ledgerAccounts);
        } */

        if (!costCenters || costCenters.length < 1) {
            FE_current.serviceCall({
                data: { name: "retrieveCostCenters_piper" },
                success: function (resp) {
                    // buildCostCenterDataList(resp.costCenterData);
                    FE_current.setAnswer({questionName: 'cost_centers', answer: resp.costCenterData})
                },
                err: function () {
                    console.log("Cost centers can't be recieved.");
                }
            });
		}
        /* } else {
          buildCostCenterDataList(costCenters);
        } */

        function buildDataList(ledgerData) {
            let h = [];
            if (ledgerData) {
                for (let i = 0, ledgerDataLen = ledgerData.length; i < ledgerDataLen; i++) {
                    const currAccount = ledgerData[i];
                    h.push('<option value="' + currAccount.id + '">');
                }

                datalistField.html(h.join(' '));

                ledgerAccountFields.attr("list", "FE_{{options.containerId}}_ledger_accounts");
                ledgerAccountFields.attr("autocomplete", "off");
            }
        }

        function buildCostCenterDataList(costCenterList) {
            let h = [];
            if (costCenterList) {
                for (let i = 0, costCenterLen = costCenterList.length; i < costCenterLen; i++) {
                    const costCenter = costCenterList[i];
                    h.push('<option value="' + costCenter.code + '">');
                }

                costCenterDatalistField.html(h.join(' '));

                costCenterFields.attr("list", "FE_{{options.containerId}}_cost_centers");
                costCenterFields.attr("autocomplete", "off");
            }
        }
    });
</script>