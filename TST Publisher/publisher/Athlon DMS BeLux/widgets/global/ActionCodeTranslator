<script>
if(findAnswer('PrefilledActionCode')){
	var formAnswers = flattenJsonData($('#questionnaire').questionnaire('findAllAnswers'));
	formAnswers.name = '{{widget.name}}';
	sendAnswer(formAnswers, function (json){TranslateActionCode(json);}, function (){errorHandler();});
}
function TranslateActionCode(response){
	if(response.status == 'true'){
		setAnswer('VoucherCode_Bridge', response.actioncode);
		setAnswer('PrefilledActionCode', '');
	}
	else{
	}

}
function errorHandler(){

}
function setAnswer(name, value) {
	$('#questionnaire').questionnaire('setAnswer', null, name, '{{ctx.id}}', value);
}
function findAnswer(name) {
	return $('#questionnaire').questionnaire('findAnswer', name, '{{ctx.id}}')
}
function setVar(name, value) {
	$('#questionnaire').questionnaire('setVar', '{{widget.id}}', '{{ctx.id}}', name, value);//todo: remove widget id ''
}
function findVar(name) {
	return $('#questionnaire').questionnaire('findVar', '{{widget.id}}', '{{ctx.id}}', name);//todo: remove widget id ''
}

/*This function will filter the json string of any array values. So instead of an array like "Array" : ["apple","coconut","kiwi"]
we get a data key of 'Array' with the value "apple,coconut,kiwi". Meaning we can easily look inside the string with the ?contains functionality
of Freemarker in MIT. Making the templates more readable in the end*/
function flattenJsonData(data) {
	for (key in data) {
		if (data.hasOwnProperty(key)) {
			var tempString = data[key].toString().replace("[", "").replace("]", "");
			data[key] = tempString;
		}
	}
	return data;
}

function sendAnswer(data, successHandler, failureHandler) {
	var serviceUri = $('#questionnaire').questionnaire("option", "serviceUri");
	$('#questionnaire').questionnaire("sendAnswer", serviceUri, data, successHandler, failureHandler);
}
</script>