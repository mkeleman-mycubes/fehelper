{
    "pipes": [
        {
            "type" : "transform",
            "name" : "dummy",
            "script" : "answers = body.answers; secureData = body.secureData; processId = body.answers.processinstanceid.data.answer[0]; userFirstName = body.secureData.user.profile.firstName; userLastName = body.secureData.user.profile.lastName; tenantId = body.secureData.tenantId"
        },
        <#if body.answers.manual_decision?? && body.answers.manual_decision.data.answer[0]?? && body.answers.manual_decision.data.answer[0] == "cancel_due_to_retail_corporate_threshold_exceeded">
            {
                "type": "action",
                "name": "getProcessVariables",
                "script": "processInstanceId = answers.processinstanceid.data.answer[0]; headers.processInstanceId = processInstanceId;"
            },
            {
                "type" : "action",
                "name" : "updateCMAOrganization_piper",
                "script": "body = [ variables: [ CustomerName:  body.CustomerName.value, CompanyIdentifier: body.MainCompanyIdentifier.value, OperatingEntity: body.OperatingEntity.value, corporate: 'true' ]]"
            },
        </#if>
        <#if body.files.documents?? && body.files.documents?has_content>
            {
                "type": "action",
                "name": "loginToDMS"
            },
            {
                "type": "action",
                "name": "getSAMLToken"
            },
            {
                "type" : "transform",
                "name" : "dummy",
                "script" : "SAMLArt = body.SAMLArt"
            },
            <@uploadToDMSPiper uploadFields=["documents"] secureData=body.secureData headers=headers historyProcess='false'/>,
        </#if>
        {
            "type": "action",
            "name": "getTaskVariables",
            "script": "headers.taskId = answers.taskid.data.answer[0]"
        },
        {
            "type": "action",
            "name": "getUsersOfGroup_piper",
            "script": "taskVariables = body; body.identity = secureData.user.identity"
        },
        {
            "type": "action",
            "name": "assessCreditManually",
            "script": "usersOfGroup = body.usersOfGroup; body = [answers:answers, secureData:secureData, taskVariables:taskVariables, usersOfGroup: usersOfGroup]; headers.taskId = answers.taskid.data.answer[0]"
        }
    ]
}
